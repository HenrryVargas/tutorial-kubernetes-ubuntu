---

# file: roles/kubernetes/tasks/main.yml

- name: Create ssh key for this machine (Necesary to start kubernetes)
  user: name=root generate_ssh_key=yes
  register: user_var

- name: Add key to authorized keys
  shell: "cat /root/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys"

- name: Download Kubernetes release bundle
  get_url: >
    url="https://github.com/GoogleCloudPlatform/kubernetes/releases/download/v1.2.0/kubernetes.tar.gz"
    dest="{{kubernetes.temporal_path}}/kubernetes.tar.gz"

- name: Untar the kubernetes bundle
  unarchive: >
    src="{{kubernetes.temporal_path}}/kubernetes.tar.gz"
    dest={{kubernetes.path}} copy=no

- name: Unarchive salbase tar to configure the cluster.
  unarchive: >-
    src={{kubernetes.path}}/kubernetes/server/kubernetes-salt.tar.gz
    dest={{kubernetes.path}}/kubernetes/cluster
    copy=no

- name: move saltbase directory outside the unarchive directory
  shell: mv {{kubernetes.path}}/kubernetes/cluster/kubernetes/saltbase {{kubernetes.path}}/kubernetes/cluster
  register: result
  failed_when: "'Directory not empty' not in result.stderr and 'true' in result.failed"

- name: Delete empty directory
  file: >-
    path={{kubernetes.path}}/kubernetes/cluster/kubernetes
    state=absent

- name: Setup default configuration
  copy: >
    src=config-default.sh
    dest={{kubernetes.path}}/kubernetes/cluster/ubuntu
    mode="0755"
    force=yes

- name: Start cluster
  shell: KUBERNETES_PROVIDER=ubuntu ./kube-up.sh chdir={{kubernetes.path}}/kubernetes/cluster
  register: result
  failed_when: "'Text file busy' not in result.stdout and 'true' in result.failed"

- name: Add kube-system namespace
  shell: ./kubectl create -f /opt/kubernetes/cluster/ubuntu/namespace.yaml chdir=/opt/kubernetes/cluster/ubuntu/binaries
  ignore_errors: yes
